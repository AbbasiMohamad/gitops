kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: sigma-ingress
{{/*  namespace: sigma*/}}
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-staff-id,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Token,X-Device-Id,Access-Control-Allow-Origin,Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
      proxy_set_header Upgrade $http_upgrade;
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
      }
spec:
  ingressClassName: nginx
  #  tls:
  #  - hosts:
  #    - '*.devmoj.ir'
  #    secretName: devmoj-tls
  rules:
    {{- range .Values.ingress}}
    - host: {{.host}}
      http:
        paths:
          - path:  {{.path}}
            pathType: Prefix
            backend:
              service:
                name: {{.service}}
                port:
                  number: {{.port}}
    {{- end}}
