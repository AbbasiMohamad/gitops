# Default values for sigma-secrets.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
imagePullSecrets:
  - name: "registry-cred"
replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
#-------------------------------Secrets

secret_files:
  - name: customer-command-secret
    secrets:
      - ConnectionStrings__CustomerCommandConnectionString: data source=mssql-externalservice,1433;initial catalog=Customer;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - ConnectionStrings__Redis: redis,password=moj@123

  - name: customer-query-secret
    secrets:
      - ConnectionStrings__CustomerQueriesConnectionString: data source=mssql-externalservice,1433;initial catalog=Customer;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;

  - name: customs-wrapper-secret
    secrets:
      - "ElasticsearchSettings__uri": http://elastic.elknamespace:9200
      - "ElasticsearchSettings__defaultIndex": customsindex
      - "ElasticsearchSettings__username": elastic
      - "ElasticsearchSettings__password": MagicWord
      - "PortalUrl__UserName": amnmoj_cix
      - "PortalUrl__Password": H3Fr%wZ)!x,-ne
      - "PortalUrl__BaseAddress": http://fake-portal

  - name: export-command-secret
    secrets:
      - "ConnectionStrings__ExportCommandsConnectionString": data source=mssql-externalservice,1433;initial catalog=Export;persist security info=True;user id=app;password=Isiran@123;  MultipleActiveResultSets=True;TrustServerCertificate=True;App=EntityFramework

  - name: export-query-secret
    secrets:
      - "ConnectionStrings__ExportQueriesConnectionString": data source=mssql-externalservice,1433;initial catalog=Export;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True
      - "ConnectionStrings__Redis": redis,password=moj@123

  - name: financial-command-secret
    secrets:
      - "ConnectionStrings__FinancialCommandConnectionString": data source=mssql-externalservice,1433;initial catalog=Financial;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;App=EntityFramework
      - "CustomerUrls__UserName": amnmoj_cix
      - "CustomerUrls__Password": H3Fr%wZ)!x,-ne
      - "CustomerUrls__BaseAddress": http://cs.prerelease.ir
      - "CustomerUrls__GoodsOwnerEndpoint": /GoodsOwner/GetInfo

  - name: iam-api-secret
    secrets:
      - "ConnectionStrings__STSConnection": data source=mssql-externalservice,1433;initial catalog=IamSts;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__IAMConnection": data source=mssql-externalservice,1433;initial catalog=IamApi;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__AuditConnection": data source=mssql-externalservice,1433;initial catalog=AuditLog;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__Redis": redis,password=Isiran@123

  - name: iam-sts-secret
    secrets:
      - "ConnectionStrings__STSConnection": data source=mssql-externalservice,1433;initial catalog=IamSts;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__AuditConnection": data source=mssql-externalservice,1433;initial catalog=AuditLog;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;

  - name: import-command-secret
    secrets:
      - "ConnectionStrings__ImportCommandsConnectionString": data source=mssql-externalservice,1433;initial catalog=Import;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__ImportQueriesConnectionString": data source=mssql-externalservice,1433;initial catalog=Import;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;  TrustServerCertificate=True;
      - "ConnectionStrings__Redis": redis,password=moj@123

  - name: import-query-secret
    secrets:
      - "ConnectionStrings__ImportQueriesConnectionString": data source=mssql-externalservice,1433;initial catalog=Import;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;  TrustServerCertificate=True;
      - "ConnectionStrings__Redis": redis,password=moj@123

  - name: mdm-secret
    secrets:
      - "ConnectionStrings__MDMCommandConnectionString": data source=mssql-externalservice,1433;initial catalog=MDM;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;

  - name: minio-secret
    secrets:
      - "Minio__Endpoint": minio-externalservice
      - "Minio__AccessKey": XAS8PG1BHSATZE09C25C
      - "Minio__SecretKey": k-6kjgUz7PvpTZ_MdWOkZXw7pIk_mZCsY1wxzuLC
      - "Minio__BucketName": sigma
      - "Minio__ExpireIn": 600 // as sec

  - name: portal-wrapper-secret
    secrets:
      - "ElasticsearchSettings__uri": http://elastic.elknamespace:9200
      - "ElasticsearchSettings__defaultIndex": customsindex
      - "ElasticsearchSettings__username": elastic
      - "ElasticsearchSettings__password": MagicWord
      - "PortalUrl__UserName": amnmoj_cix
      - "PortalUrl__Password": H3Fr%wZ)!x,-ne
      - "PortalUrl__BaseAddress": http://fake-portal

  - name: portaldoc-command-secret
    secrets:
      - "ConnectionStrings__PortalDocumentsCommandsConnectionString": data source=mssql-externalservice,1433;initial catalog=PortalDocuments;persist security info=True;user id=app;  password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__PortalDocumentsQueriesConnectionString": data source=mssql-externalservice,1433;initial catalog=PortalDocuments;persist security info=True;user id=app;  password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__Redis": redis

  - name: portaldoc-query-secret
    secrets:
      - "ConnectionStrings__PortalDocumentsQueriesConnectionString": data source=mssql-externalservice,1433;initial catalog=PortalDocuments;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;

  - name: global-secret
    secrets:
      - "ConnectionStrings__ImportCommandsConnectionString": data source=mssql-externalservice,1433;initial catalog=Import;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;

  - name: sso-secret
    secrets:
      - "SSO__BaseAddress": https://iam-sts
      - "SSO__AuthorizationUrl": https://sts.prerelease.ir/connect/authorize
      - "SSO__TokenUrl": https://sts.prerelease.ir/connect/token
      - "SSO__ApiName": moj_sigma_iam_endpoint_api
      - "SSO__ClientId": moj_sigma_iam_endpoint_api_swagger
      - "SSO__OAuthAppName": sigma
      - "SSO__ClientSecret": secret
      - "SSO__Issuer": https://sts.prerelease.ir

  - name: transit-command-secret
    secrets:
      - "ConnectionStrings__TransitCommandsConnectionString": data source=mssql-externalservice,1433;initial catalog=Transit;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__Redis": redis,password=moj@123

  - name: transit-query-secret
    secrets:
      - "ConnectionStrings__TransitQueriesConnectionString": data source=mssql-externalservice,1433;initial catalog=Transit;persist security info=True;user id=app;password=Isiran@123;MultipleActiveResultSets=True;TrustServerCertificate=True;
      - "ConnectionStrings__Redis": redis,password=moj@123

#-------------------------------Services
services:
  - name: customer-command
  - name: apigateway
  - name: customer-query
  - name: customs-wrapper
  - name: digitalsign
  - name: export-command
  - name: export-query
  - name: fake-portal
  - name: financial-command
  - name: financial-query
  - name: iam-api
  - name: iam-sts
  - name: import-command
  - name: import
  - name: import-test2
  - name: mdm
  - name: portal-wrapper
  - name: portaldoccommand
  - name: portaldocquery
  - name: transit-command
  - name: transit-query

#-------------------------------Deployments
deployments:

  ####################API Gateway
  - fullname: apigateway
    image:
      repository: registry.prerelease.ir/ts/ci-cd/apigateway
      tag: latest
    selectorLabels:
      - app: apigateway
      - role: master
    port: 80
    volumes:
      - name: apigateway-cm
        configMap:
          name: apigateway-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: apigateway-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env: [ ]

  ####################Customer
  ########Command
  - fullname: customer-command
    image:
      repository: registry.prerelease.ir/ts/ci-cd/customer-command
      tag: latest
    selectorLabels:
      - app: customer-command
      - role: master
    port: 80
    volumes:
      - name: customer-command-cm
        configMap:
          name: customer-command-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: customer-command-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env:
      - name: "ConnectionStrings__CustomerCommandConnectionString"
        valueFrom:
          secretKeyRef:
            name: customer-command-secret
            key: "ConnectionStrings__CustomerCommandConnectionString"
      - name: "ConnectionStrings__Redis"
        valueFrom:
          secretKeyRef:
            name: customer-command-secret
            key: "ConnectionStrings__Redis"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
        #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"
      - name: "Minio__ExpireIn"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__ExpireIn"

  ########Query
  - fullname: customer-query
    image:
      repository: registry.prerelease.ir/ts/ci-cd/customer-query
      tag: latest
    selectorLabels:
      - app: customer-query
      - role: master
    port: 80
    volumes:
      - name: customer-query-cm
        configMap:
          name: customer-query-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: customer-query-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env:
      - name: "ConnectionStrings__CustomerQueriesConnectionString"
        valueFrom:
          secretKeyRef:
            name: customer-query-secret
            key: "ConnectionStrings__CustomerQueriesConnectionString"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
        #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"
      - name: "Minio__ExpireIn"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__ExpireIn"

  ####################PortalDocuments
  ########Command
  - fullname: portaldoc-command
    image:
      repository: registry.prerelease.ir/ts/ci-cd/portaldoc-command-sigma
      tag: latest
    selectorLabels:
      - app: portaldoc-command
      - role: master
    port: 80
    volumes:
      - name: portaldoc-command-cm
        configMap:
          name: portaldoc-command-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: portaldoc-command-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env: [ ]

  ########Query
  - fullname: portaldoc-query
    image:
      repository: registry.prerelease.ir/ts/ci-cd/portaldoc-query-sigma
      tag: latest
    selectorLabels:
      - app: portaldoc-query
      - role: master
    port: 80
    volumes:
      - name: portaldoc-query-cm
        configMap:
          name: portaldoc-query-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: portaldoc-query-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env: [ ]

  ####################Import
  ########Command
  - fullname: import-command
    image:
      repository: registry.prerelease.ir/ts/ci-cd/import-command
      tag: latest
    selectorLabels:
      - app: import-command
      - role: master
    port: 80
    volumes:
      - name: import-command-cm
        configMap:
          name: import-command-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: import-command-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env:
      - name: "ConnectionStrings__ImportCommandsConnectionString"
        valueFrom:
          secretKeyRef:
            name: import-command-secret
            key: "ConnectionStrings__ImportCommandsConnectionString"
      - name: "ConnectionStrings__ImportQueriesConnectionString"
        valueFrom:
          secretKeyRef:
            name: import-command-secret
            key: "ConnectionStrings__ImportQueriesConnectionString"
      - name: "ConnectionStrings__Redis"
        valueFrom:
          secretKeyRef:
            name: import-command-secret
            key: "ConnectionStrings__Redis"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
      #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"
      - name: "Minio__ExpireIn"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__ExpireIn"

  ########Query
  - fullname: import-query
    image:
      repository: registry.prerelease.ir/ts/ci-cd/import-query
      tag: latest
    selectorLabels:
      - app: import-query
      - role: master
    port: 80
    volumes:
      - name: import-query-cm
        configMap:
          name: import-query-cm
          items:
            - key: appsettings.json
              path: appsettings.json
      - name: import-query-serilog-cm
        configMap:
          name: import-query-serilog-cm
          items:
            - key: serilog.json
              path: serilog.json
    volumeMounts:
      - name: import-query-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
      - name: import-query-serilog-cm
        mountPath: /app/serilog.json
        subPath: serilog.json
    env:
      - name: "ConnectionStrings__ImportQueriesConnectionString"
        valueFrom:
          secretKeyRef:
            name: import-query-secret
            key: "ConnectionStrings__ImportQueriesConnectionString"
      - name: "ConnectionStrings__Redis"
        valueFrom:
          secretKeyRef:
            name: import-query-secret
            key: "ConnectionStrings__Redis"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
      #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"
      - name: "Minio__ExpireIn"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__ExpireIn"

  ####################Financial
  ########Command
  - fullname: financial-command
    image:
      repository: registry.prerelease.ir/ts/ci-cd/financial-sigma-command
      tag: latest
    selectorLabels:
      - app: financial-command
      - role: master
    port: 80
    volumes:
      - name: financial-command-cm
        configMap:
          name: financial-command-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: financial-command-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env:

      - name: "ConnectionStrings__FinancialCommandConnectionString"
        valueFrom:
          secretKeyRef:
            name: financial-command-secret
            key: "ConnectionStrings__FinancialCommandConnectionString"
      - name: "CustomerUrls__UserName"
        valueFrom:
          secretKeyRef:
            name: financial-command-secret
            key: "CustomerUrls__UserName"
      - name: "CustomerUrls__Password"
        valueFrom:
          secretKeyRef:
            name: financial-command-secret
            key: "CustomerUrls__Password"
      - name: "CustomerUrls__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: financial-command-secret
            key: "CustomerUrls__BaseAddress"
      - name: "CustomerUrls__GoodsOwnerEndpoint"
        valueFrom:
          secretKeyRef:
            name: financial-command-secret
            key: "CustomerUrls__GoodsOwnerEndpoint"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
      #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"

  ########Query
  - fullname: financial-query
    image:
      repository: registry.prerelease.ir/ts/ci-cd/financial-sigma-query
      tag: latest
    selectorLabels:
      - app: financial-query
      - role: master
    port: 80
    volumes:
      - name: financial-query-cm
        configMap:
          name: financial-query-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: financial-query-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json

  ####################MDM
  - fullname: mdm
    image:
      repository: registry.prerelease.ir/ts/ci-cd/mdm
      tag: latest
    selectorLabels:
      - app: mdm
      - role: master
    port: 80
    volumes:
      - name: mdm-cm
        configMap:
          name: mdm-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: mdm-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env:
      - name: "ConnectionStrings__MDMCommandConnectionString"
        valueFrom:
          secretKeyRef:
            name: mdm-secret
            key: "ConnectionStrings__MDMCommandConnectionString"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
      #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"

  ####################IAM
  ########API
  - fullname: iam-api
    image:
      repository: registry.prerelease.ir/ts/ci-cd/iam-sigma-api
      tag: latest
    selectorLabels:
      - app: iam-api
      - role: master
    port: 80
    volumes:
      - name: iam-api-cm
        configMap:
          name: iam-api-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: iam-api-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    
    env:
      - name: "ConnectionStrings__STSConnection"
        valueFrom:
          secretKeyRef:
            name: iam-api-secret
            key: "ConnectionStrings__STSConnection"
            env:
      - name: "ConnectionStrings__IAMConnection"
        valueFrom:
          secretKeyRef:
            name: iam-api-secret
            key: "ConnectionStrings__IAMConnection"
            env:
      - name: "ConnectionStrings__AuditConnection"
        valueFrom:
          secretKeyRef:
            name: iam-api-secret
            key: "ConnectionStrings__AuditConnection"
            env:
      - name: "ConnectionStrings__Redis"
        valueFrom:
          secretKeyRef:
            name: iam-api-secret
            key: "ConnectionStrings__Redis"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
      #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"
      - name: "Minio__ExpireIn"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__ExpireIn"

  ########STS
  - fullname: iam-sts
    image:
      repository: registry.prerelease.ir/ts/ci-cd/iam-sigma-sts
      tag: latest
    selectorLabels:
      - app: iam-sts
      - role: master
    port: 80
    volumes:
      - name: iam-sts-cm
        configMap:
          name: iam-sts-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: iam-sts-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env:
      - name: "ConnectionStrings__STSConnection"
        valueFrom:
          secretKeyRef:
            name: iam-sts-secret
            key: "ConnectionStrings__STSConnection"
      - name: "ConnectionStrings__AuditConnection"
        valueFrom:
          secretKeyRef:
            name: iam-sts-secret
            key: "ConnectionStrings__AuditConnection"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
      #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"
      - name: "Minio__ExpireIn"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__ExpireIn"

  ####################Endpoint Wrappers
  ########Customs
  - fullname: customs-wrapper
    image:
      repository: registry.prerelease.ir/ts/ci-cd/customs-wrapper
      tag: latest
    selectorLabels:
      - app: customs-wrapper
      - role: master
    port: 80
    volumes:
      - name: customs-wrapper-cm
        configMap:
          name: customs-wrapper-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: customs-wrapper-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json
    env:
      - name: "ElasticsearchSettings__uri"
        valueFrom:
          secretKeyRef:
            name: customs-wrapper-secret
            key: "ElasticsearchSettings__uri"
      - name: "ElasticsearchSettings__defaultIndex"
        valueFrom:
          secretKeyRef:
            name: customs-wrapper-secret
            key: "ElasticsearchSettings__defaultIndex"
      - name: "ElasticsearchSettings__username"
        valueFrom:
          secretKeyRef:
            name: customs-wrapper-secret
            key: "ElasticsearchSettings__username"
      - name: "ElasticsearchSettings__password"
        valueFrom:
          secretKeyRef:
            name: customs-wrapper-secret
            key: "ElasticsearchSettings__password"
      - name: "PortalUrl__UserName"
        valueFrom:
          secretKeyRef:
            name: customs-wrapper-secret
            key: "PortalUrl__UserName"
      - name: "PortalUrl__Password"
        valueFrom:
          secretKeyRef:
            name: customs-wrapper-secret
            key: "PortalUrl__Password"
      - name: "PortalUrl__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: customs-wrapper-secret
            key: "PortalUrl__BaseAddress"
      #sso_secret
      - name: "SSO__BaseAddress"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__BaseAddress"
      - name: "SSO__AuthorizationUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__AuthorizationUrl"
      - name: "SSO__TokenUrl"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__TokenUrl"
      - name: "SSO__ApiName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ApiName"
      - name: "SSO__ClientId"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientId"
      - name: "SSO__OAuthAppName"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__OAuthAppName"
      - name: "SSO__ClientSecret"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__ClientSecret"
      - name: "SSO__Issuer"
        valueFrom:
          secretKeyRef:
            name: sso-secret
            key: "SSO__Issuer"
      #minio_secret
      - name: "Minio__Endpoint"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__Endpoint"
      - name: "Minio__AccessKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__AccessKey"
      - name: "Minio__SecretKey"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__SecretKey"
      - name: "Minio__BucketName"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__BucketName"
      - name: "Minio__ExpireIn"
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: "Minio__ExpireIn"

  ########Portal
  - fullname: portal-wrapper
    image:
      repository: registry.prerelease.ir/ts/ci-cd/portal-wrapper
      tag: latest
    selectorLabels:
      - app: portal-wrapper
      - role: master
    port: 80
    volumes:
      - name: portal-wrapper-cm
        configMap:
          name: portal-wrapper-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: portal-wrapper-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json

  ########Fake Portal
  - fullname: fake-portal
    image:
      repository: registry.prerelease.ir/ts/ci-cd/fake-portal
      tag: latest
    selectorLabels:
      - app: fake-portal
      - role: master
    port: 80
    volumes:
      - name: fake-portal-cm
        configMap:
          name: fake-portal-cm
          items:
            - key: appsettings.json
              path: appsettings.json
    volumeMounts:
      - name: fake-portal-cm
        readOnly: true
        mountPath: /app/appsettings.json
        subPath: appsettings.json

#--------------------------------Ingress
ingress:
 - host: client.devmoj.ir
   path: /
   service: client
   port: 80
 - host: cwr.devmoj.ir
   path: /
   service: customs-wrapper
   port: 80

#--------------------------------Serilogs
configmaps:
  - name: customer-query-serilog-cm
    data:
      serilog.json: |
        {
          "Serilog": {
            "Enrich": [
              "WithCorrelationId"
            ],
            "MinimumLevel": {
              "Default": "Information",
              "Override": {
                "Moj.Sigma": "Information",
                
                "Microsoft": "Error",
                
                "Microsoft.Hosting.Lifetime": "Information",
                "Microsoft.AspNetCore.Hosting.Diagnostics": "Information",
                
                "Microsoft.EntityFrameworkCore": "Warning",
                
                "MassTransit": "Error"
              }
            },
            "WriteTo": [
              {
                "Name": "Console",
                "Args": {
                  "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
                  "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}"
                }
              },
              {
                "Name": "Elasticsearch",
                "Args": {
                  "nodeUris": "http://elasticsearch:9200",
                  //"nodeUris": "http://elastic.elknamespace:9200",
                  "indexFormat": "Sigma-Customer-Query-{0:yyyy-MM-dd}",
                  "typeName": null,
                  "autoRegisterTemplate": true,
                  "batchAction": "Create",
                  "inlineFields": true,
                  "connectionTimeout": 5,
                  "overwriteTemplate": true,
                  "registerTemplateFailure": "IndexAnyway",
                  "deadLetterIndexName": "deadletter-{0:yyyy.MM}"
                }
              }
            ]
          }
        }
  
  





